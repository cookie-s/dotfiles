[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc'
build= 'make'

[[plugins]]
repo = 'Shougo/vimshell'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = {
            \ '_' : {
            \   'runner' : 'vimproc',
            \   'runner/vimproc/updatetime' : 60,
            \   'outputter' : 'error',
            \   'outputter/error/success' : 'buffer',
            \   'outputter/error/error' : 'quickfix',
            \   'outputter/buffer/split' : 'rightbelow 8',
            \   'outputter/buffer/close_on_empty' : 1,
            \ },
            \ 'tex' : {
            \   'command' : 'latexmk',
            \   'outputter' : 'error',
            \   'outputter/error/success' : 'null',
            \   'outputter/error/error' : 'quickfix',
            \   'srcfile' : expand("%"),
            \   'hook/sweep/files' : [
            \       '%S:p:r.aux',
            \       '%S:p:r.bbl',
            \       '%S:p:r.blg',
            \       '%S:p:r.dvi',
            \       '%S:p:r.fdb_latexmk',
            \       '%S:p:r.fls',
            \       '%S:p:r.synctex.gz',
            \       ],
            \   'exec' : '%c %o %a %s'
            \   },
            \ 'scheme' : {
            \   'command' : 'guile',
            \ },
            \ 'ocaml' : {
            \   'command' : 'ocaml',
            \ },
            \}
let g:quickrun_no_default_key_mappings = 1
nnoremap \r :cclose<CR>:QuickRun -mode n<CR>
xnoremap \r :<C-U>cclose<CR>gv:QuickRun -mode v<CR>
'''

[[plugins]]
repo = 'Shougo/neosnippet'
hook_add = '''
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)
imap <expr><TAB>
            \ pumvisible() ? "\<C-n>" :
            \ neosnippet#expandable_or_jumpable() ?
            \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
            \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
let g:neosnippet#snippets_directory=['~/.vim/snippets/', '~/.vim/bundle/vim-snippets/snippets/']
'''
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neoinclude.vim'

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
repo = 'airblade/vim-rooter'

[[plugins]]
repo = 'tpope/vim-eunuch'

[[plugins]]
repo = 'cookie-s/project.vim'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'vim-scripts/matchit.zip'
[[plugins]]
repo = 'tpope/vim-sleuth'
[[plugins]]
repo = 'embear/vim-localvimrc'
hook_add = '''
let g:localvimrc_ask = 0
'''

[[plugins]]
repo = 'AndrewRadev/switch.vim'
[[plugins]]
repo = 'tpope/vim-endwise'
[[plugins]]
repo = 'vim-airline/vim-airline'
[[plugins]]
repo = 'vim-airline/vim-airline-themes'
[[plugins]]
repo = 'w0ng/vim-hybrid'

[[plugins]]
repo = 'majutsushi/tagbar'
[[plugins]]
repo = 'alpaca-tc/alpaca_tags'
[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'mileszs/ack.vim'
hook_add = '''
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_post_update = ':UpdateRemotePlugins'
hook_source = '''
let g:deoplete#enable_at_startup = 1
'''
[[plugins]]
repo = 'roxma/nvim-yarp'
if   = '''! has('nvim')'''
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if   = '''! has('nvim')'''

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
if   = '''has('python3')'''
build = 'sh install.sh'

[[plugins]]
repo = 'Shougo/denite.nvim'
[[plugins]]
repo = 'ujihisa/unite-colorscheme'
[[plugins]]
repo = 'Shougo/echodoc.vim'

[[plugins]]
repo = 'jvirtanen/vim-octave'

[[plugins]]
repo = 'kevinw/pyflakes-vim'
[[plugins]]
repo = 'nvie/vim-flake8'

